filter(format != 'Outros') %>%
mutate(site = fct_reorder(site, desc(freq)))
ggplot(graph, aes(x=site, y=as.integer(freq))) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
xlab("Portais") %+%
ylab("Datasets")
ggplot(graph, aes(x=site, y=as.integer(freq))) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(stat='count', aes(label = ..count..), vjust = -1) %+%
xlab("Portais") %+%
ylab("Dados tabulares")
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(stat='count', aes(label = freq), vjust = -1) %+%
xlab("Portais") %+%
ylab("Dados tabulares")
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(stat='count', aes(label = graph$freq), vjust = -1) %+%
xlab("Portais") %+%
ylab("Dados tabulares")
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(aes(label=freq), position=position_dodge(width=0.9), vjust=-0.25)
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(aes(label=freq), position=position_dodge(width=0.9), vjust=-0.40)
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(aes(label=freq), position=position_dodge(width=0.9), vjust=-0.10)
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(aes(label=freq), position=position_dodge(width=0.9), vjust=-0)
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(aes(label=freq), position=position_dodge(width=0.9), vjust=0.5)
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(aes(label=freq))
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
geom_text(aes(label=freq))
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
xlab("Portais") %+%
ylab("Dados tabulares")
ggplot(graph, aes(x=site, y=freq, fill = "#FF6666")) %+%
geom_bar(stat = "identity") %+%
coord_flip() %+%
xlab("Portais") %+%
ylab("Dados tabulares")
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity", fill = "#FF6666) %+%
coord_flip() %+%
xlab("Portais") %+%
ylab("Dados tabulares")
}
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity", fill = "#FF6666") %+%
coord_flip() %+%
xlab("Portais") %+%
ylab("Dados tabulares")
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity", fill = "#6495ED") %+%
coord_flip() %+%
xlab("Portais") %+%
ylab("Dados tabulares")
library("ggplot2")
library("ggplot2")
unique(arquivos$format)
library("dplyr")
arquivos %>% mutate(format = sub("\\.", "", toupper(format)))
unique((arquivos %>% mutate(format = sub("\\.", "", toupper(format))))$format)
datasets
arquivos %>% inner_join(datasets, x = package_id, y = id)
arquivos %>% inner_join(datasets, x = id, y = package_id)
arquivos %>% inner_join(datasets, by = ("package_id" = "id"))
arquivos$package_id
datasets$id
arquivos$package_id
datasets$id
arquivos %>% inner_join(datasets, by = c("package_id" = "id"))
arquivos
length(arquivos$package_id)
arquivos %>% inner_join(datasets, by = c("package_id" = "id"))
result <- arquivos %>% inner_join(datasets, by = c("package_id" = "id"))
result$site.x
result$site.y
result$license_id
length(result$license_id)
length(arquivos$package_id)
length(result$license_id)
length(result$license_id)
unique(result$license_id)
result[result$license_id == "notspecified", ]
length(arquivos$package_id)
result[result$license_id == "notspecified", ]
datasets$id
unique(result$license_id)
result[result$license_id == "other-closed", ]
result[result$license_id == "other-closed", ]
result[result$license_id == "other-closed", ]
unique(result$license_id)
licencasAbertas <- c(
"cc-by-sa", "odc-odbl", "other-pd",
"gfdl", "cc-nc", "cc-by",
"other-open", "CC0-1.0", "CC-BY-4.0",
"CC-BY-NC-4.0", "odc-pddl", "cc-zero"
)
result <- arquivos %>% inner_join(datasets, by = c("package_id" = "id"))
result %>% filter(license_id %in% licencasAbertas)
result %>% filter(!(license_id %in% licencasAbertas))
result %>% filter(license_id %in% licencasAbertas)
result %>% filter(!(license_id %in% licencasAbertas))
result <- arquivos %>% inner_join(datasets, by = c("package_id" = "id"))
result <- result %>% filter(license_id %in% licencasAbertas)
result$id
arquivos %>% filter(id %in% result$id)
result$id
arquivos %>% filter(id %in% result$id)
result
length(result$id)
arquivos %>% filter(id %in% result$id)
length(result$id)
length((arquivos %>% filter(id %in% result$id))$id)
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
source('src/grafico_populacao_x_datasets.R')
source('src/grafico_formatos.R')
source('src/grafico_ano.R')
source('src/grafico_tamanho.R')
source('src/grafico_idade.R')
source('src/grafico_5_estrelas.R')
source('src/nuvem_palavras.R')
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
grafico_proporcao_tabular(arquivos)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
#grafico_proporcao_tabular(arquivos)
})
grafico_formatos <- function(datasetsFormatos) {
tabular <- c('CSV', 'ODS', 'XLSX', 'XLS')
textual <- c('PDF', 'DOC', 'DOCX', 'TXT', 'RDF')
zip <- c('ZIP')
imagens <- c('PNG', 'JPG', 'JPEG', 'SVG')
graph <- datasetsFormatos %>%
mutate(format = sub("\\.", "", toupper(format))) %>%
mutate(format = ifelse(format %in% c(tabular, textual, zip, imagens), format, 'Outros')) %>%
mutate(format = ifelse(format %in% tabular, 'Tabular', format)) %>%
mutate(format = ifelse(format %in% textual, 'Textual', format)) %>%
mutate(format = ifelse(grepl(zip, format), 'ZIP', format)) %>%
mutate(format = ifelse(format %in% imagens, 'Imagens', format)) %>%
group_by(format) %>%
summarise(count = n())
graph$Formato <- graph$format
graph$Percentual <- round((graph$count / sum(graph$count)) * 100)
graph <- graph %>% arrange(desc(count))
print(graph)
ggplot(data = graph) %+%
geom_bar(aes(x = "", y = Percentual, fill = Formato), stat="identity", width = 1) %+%
coord_polar("y", start = 0) %+%
theme_void() %+%
geom_text(aes(x=1, y = cumsum(Percentual) - Percentual/2, label = Percentual))
}
grafico_proporcao_tabular <- function(arquivos) {
tabular <- c('CSV', 'ODS', 'XLSX', 'XLS')
graph <- arquivos %>%
mutate(format = sub("\\.", "", toupper(format))) %>%
mutate(format = ifelse(format %in% tabular, 'Tabular', format)) %>%
mutate(format = ifelse(format != 'Tabular', 'Outros', format)) %>%
group_by(site, format) %>%
summarise(count = n()) %>%
mutate(freq = round(count / sum(count)* 100)) %>%
ungroup(site) %>%
filter(format != 'Outros') %>%
mutate(site = fct_reorder(site, desc(freq)))
print(graph)
ggplot(graph, aes(x=site, y=freq)) %+%
geom_bar(stat = "identity", fill = "#6495ED") %+%
coord_flip() %+%
xlab("Portais") %+%
ylab("Dados tabulares")
}
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
#grafico_proporcao_tabular(arquivos)
})
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
source('src/grafico_populacao_x_datasets.R')
source('src/grafico_formatos.R')
source('src/grafico_ano.R')
source('src/grafico_tamanho.R')
source('src/grafico_idade.R')
source('src/grafico_5_estrelas.R')
source('src/nuvem_palavras.R')
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
library("dplyr")
library("dplyr")
library("dplyr")
source('src/minerar_dados.R')
install.packages("dplyr")
install.packages("ckanr")
install.packages("dplyr")
install.packages("wordmap2")
install.packages("ggplot2")
install.packages("wordcloud2")
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
install.packages("forcats")
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
source('src/grafico_populacao_x_datasets.R')
install.packages("stringr")
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
source('src/grafico_populacao_x_datasets.R')
source('src/grafico_formatos.R')
source('src/grafico_ano.R')
source('src/grafico_tamanho.R')
source('src/grafico_idade.R')
source('src/grafico_5_estrelas.R')
source('src/nuvem_palavras.R')
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
grafico_populacao_x_datasets(datasets)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(format(as.Date(metadata_created), '%Y') == 2020)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.8)
})
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
datasets <- buscar_todos_datasets(sites)
datasets <- buscar_todos_datasets(sites)
datasets <- buscar_todos_datasets(sites)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites)
grupos <- buscar_todos_grupos(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
install.packages("knitr")
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(format(as.Date(metadata_created), '%Y') == 2020)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.8)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(site == "Sao Paulo - SP")
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.7)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(site == "Sao Paulo - SP")
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.7)
})
suppressWarnings({
datasets <- buscar_todos_datasets(estados)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.6)
})
suppressWarnings({
datasets <- buscar_todos_datasets(estados)
tags <- buscar_todas_tags(estados) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(estados) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.6)
})
suppressWarnings({
datasets <- buscar_todos_datasets(municipios)
tags <- buscar_todas_tags(municipios) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(municipios) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
suppressWarnings({
datasets <- buscar_todos_datasets(municipios)
tags <- buscar_todas_tags(municipios) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(municipios) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.6)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
grafico_idade_criacao(datasets)
tabela <- tabela_ano_criacao(datasets)
tabela
tabela %>% group_by(site) %>% summarise(minimo = min(ano), maximo = max(ano)) %>% arrange(minimo, maximo)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
#grafico_proporcao_tabular(arquivos)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
grafico_proporcao_tabular(arquivos)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_proporcao_tabular(arquivos)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_proporcao_tabular(arquivos)
})
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
library("ggplot2")
library("dplyr")
################## Primeira estrela
primeira_estrela <- function(arquivos, datasets) {
result <- arquivos %>% inner_join(datasets, by = c("package_id" = "id"))
result <- result %>% filter(license_id %in% licencasAbertas)
return(arquivos %>% filter(id %in% result$id))
}
calcular_estrelas <- function(datasets, arquivos) {
unique(datasets[datasets$license_id == 'other-closed',])
licencasAbertas <- c(
"cc-by-sa", "odc-odbl", "other-pd",
"gfdl", "cc-nc", "cc-by",
"other-open", "CC0-1.0", "CC-BY-4.0",
"CC-BY-NC-4.0", "odc-pddl", "cc-zero"
)
zeroEstrela 	<- c("API", "APP", "EXE", "JS", "Perl", "OWL", "HTML", "XSLT", "RDFa", "URL", "XLM", "LOG", "CTR")
umaEstrela 		<- c(
"PPTX", "DOC", "ArcGIS Online Map", "ZIP", "GZ", "ODT", "RAR", "TXT", "DCR", "DOCX", "WORD","BIN", "PPT", "ODP",
"PDF", "ODC", "MXD", "TAR", "OPENDOCUMENT", "RTF",
"ZIP CSV", "ZIP/CSV", "ZIP/DBF", "CSV/ZIP", "BPMN", "CVS", "APPLICATION/MSWORD", "PDF E HTML", "XLS / ODS", "XLSX / ODS", "CSV E PDF"
)
duasEstrela 	<- c("XLS", "MDB", "ArcGIS Map Service", "BMP", "TIFF", "XLSX", "GIF", "E00", "MrSID", "ArcGIS Map Preview", "MOP", "Esri REST", "DBASE", "SHP")
tresEstrela 	<- c("KML", "WCS", "NetCDF", "TSV", "WFS", "KMZ", "QGIS", "ODS", "JSON", "ODB", "ODF", "ODG", "XML", "WMS", "WMTS", "SVG", "JPEG", "JPG","CSV", "Atom Feed", "XYZ", "PNG", "RSS", "GEOJSON", "TOPOJSON", "IATI", "ICS")
cincoEstrela 	<- c("N3", "SPARQL", "RDF", "TTL", "KML")
result <- arquivos %>%
mutate(estrela = "") %>%
mutate(format = sub("\\.", "", toupper(format))) %>%
transform(estrela = ifelse(format %in% umaEstrela, '✰', estrela)) %>%
transform(estrela = ifelse(format %in% duasEstrela, '✰✰', estrela)) %>%
transform(estrela = ifelse(format %in% tresEstrela, '✰✰✰', estrela)) %>%
transform(estrela = ifelse(format %in% cincoEstrela, '✰✰✰✰', estrela))
return(result)
}
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
