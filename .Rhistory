source('src/grafico_5_estrelas.R')
source('src/nuvem_palavras.R')
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
library("dplyr")
library("dplyr")
library("dplyr")
source('src/minerar_dados.R')
install.packages("dplyr")
install.packages("ckanr")
install.packages("dplyr")
install.packages("wordmap2")
install.packages("ggplot2")
install.packages("wordcloud2")
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
install.packages("forcats")
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
source('src/grafico_populacao_x_datasets.R')
install.packages("stringr")
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
source('src/grafico_populacao_x_datasets.R')
source('src/grafico_formatos.R')
source('src/grafico_ano.R')
source('src/grafico_tamanho.R')
source('src/grafico_idade.R')
source('src/grafico_5_estrelas.R')
source('src/nuvem_palavras.R')
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
grafico_populacao_x_datasets(datasets)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(format(as.Date(metadata_created), '%Y') == 2020)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.8)
})
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
datasets <- buscar_todos_datasets(sites)
datasets <- buscar_todos_datasets(sites)
datasets <- buscar_todos_datasets(sites)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites)
grupos <- buscar_todos_grupos(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
install.packages("knitr")
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(format(as.Date(metadata_created), '%Y') == 2020)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.8)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(site == "Sao Paulo - SP")
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.7)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(site == "Sao Paulo - SP")
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.7)
})
suppressWarnings({
datasets <- buscar_todos_datasets(estados)
tags <- buscar_todas_tags(pastas) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(pastas) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.6)
})
suppressWarnings({
datasets <- buscar_todos_datasets(estados)
tags <- buscar_todas_tags(estados) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(estados) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.6)
})
suppressWarnings({
datasets <- buscar_todos_datasets(municipios)
tags <- buscar_todas_tags(municipios) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(municipios) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
suppressWarnings({
datasets <- buscar_todos_datasets(municipios)
tags <- buscar_todas_tags(municipios) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(municipios) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.6)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
grafico_idade_criacao(datasets)
tabela <- tabela_ano_criacao(datasets)
tabela
tabela %>% group_by(site) %>% summarise(minimo = min(ano), maximo = max(ano)) %>% arrange(minimo, maximo)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
#grafico_proporcao_tabular(arquivos)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
grafico_proporcao_tabular(arquivos)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_proporcao_tabular(arquivos)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_proporcao_tabular(arquivos)
})
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
library("ggplot2")
library("dplyr")
################## Primeira estrela
primeira_estrela <- function(arquivos, datasets) {
result <- arquivos %>% inner_join(datasets, by = c("package_id" = "id"))
result <- result %>% filter(license_id %in% licencasAbertas)
return(arquivos %>% filter(id %in% result$id))
}
calcular_estrelas <- function(datasets, arquivos) {
unique(datasets[datasets$license_id == 'other-closed',])
licencasAbertas <- c(
"cc-by-sa", "odc-odbl", "other-pd",
"gfdl", "cc-nc", "cc-by",
"other-open", "CC0-1.0", "CC-BY-4.0",
"CC-BY-NC-4.0", "odc-pddl", "cc-zero"
)
zeroEstrela 	<- c("API", "APP", "EXE", "JS", "Perl", "OWL", "HTML", "XSLT", "RDFa", "URL", "XLM", "LOG", "CTR")
umaEstrela 		<- c(
"PPTX", "DOC", "ArcGIS Online Map", "ZIP", "GZ", "ODT", "RAR", "TXT", "DCR", "DOCX", "WORD","BIN", "PPT", "ODP",
"PDF", "ODC", "MXD", "TAR", "OPENDOCUMENT", "RTF",
"ZIP CSV", "ZIP/CSV", "ZIP/DBF", "CSV/ZIP", "BPMN", "CVS", "APPLICATION/MSWORD", "PDF E HTML", "XLS / ODS", "XLSX / ODS", "CSV E PDF"
)
duasEstrela 	<- c("XLS", "MDB", "ArcGIS Map Service", "BMP", "TIFF", "XLSX", "GIF", "E00", "MrSID", "ArcGIS Map Preview", "MOP", "Esri REST", "DBASE", "SHP")
tresEstrela 	<- c("KML", "WCS", "NetCDF", "TSV", "WFS", "KMZ", "QGIS", "ODS", "JSON", "ODB", "ODF", "ODG", "XML", "WMS", "WMTS", "SVG", "JPEG", "JPG","CSV", "Atom Feed", "XYZ", "PNG", "RSS", "GEOJSON", "TOPOJSON", "IATI", "ICS")
cincoEstrela 	<- c("N3", "SPARQL", "RDF", "TTL", "KML")
result <- arquivos %>%
mutate(estrela = "") %>%
mutate(format = sub("\\.", "", toupper(format))) %>%
transform(estrela = ifelse(format %in% umaEstrela, '✰', estrela)) %>%
transform(estrela = ifelse(format %in% duasEstrela, '✰✰', estrela)) %>%
transform(estrela = ifelse(format %in% tresEstrela, '✰✰✰', estrela)) %>%
transform(estrela = ifelse(format %in% cincoEstrela, '✰✰✰✰', estrela))
return(result)
}
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
library("dplyr")
source('src/minerar_dados.R')
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
source('src/grafico_populacao_x_datasets.R')
source('src/grafico_formatos.R')
source('src/grafico_ano.R')
source('src/grafico_tamanho.R')
source('src/grafico_idade.R')
source('src/grafico_5_estrelas.R')
source('src/nuvem_palavras.R')
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
grafico_populacao_x_datasets(datasets)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites)
grupos <- buscar_todos_grupos(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
minerar_site(site = 'http://dados.al.gov.br', diretorio = './mineracao/Alagoas')
minerar_site(site = 'http://dados.al.gov.br', diretorio = './mineracao/Alagoas')
library('ckanr')
library('dplyr')
minerar_site <- function(site, diretorio, limite = 1000, inicio = 0) {
print(paste("Minerando dados de", site))
pacotes <- package_list_current(limit = limite, as = "table", url = site, offset = inicio)
datasets <- pacotes %>% select(id, license_id, license_title, title, num_resources, num_tags, metadata_created, metadata_modified)
for(i in 1:length(pacotes$id)) {
if(length(as.data.frame(pacotes[i, ]$tags)) > 0)
pacotes[i, ]$tags[[1]]$package_id <- pacotes[i, ]$id
if(length(as.data.frame(pacotes[i, ]$groups)) > 0)
pacotes[i, ]$groups[[1]]$package_id <- pacotes[i, ]$id
if(length(as.data.frame(pacotes[i, ]$resources)) > 0)
pacotes[i, ]$resources[[1]]$package_id <- pacotes[i, ]$id
}
arquivos <- do.call("rbind", pacotes$resources)
tags_pacotes <- do.call("rbind", pacotes$tags)
grupos_pacotes <- do.call("rbind", pacotes$groups)
sufixo <- ifelse(inicio > 0, paste("_", inicio, sep = ""), "")
write.csv2(datasets, file = paste(diretorio, '/datasets', sufixo, '.csv', sep = ''))
write.csv2(arquivos, file = paste(diretorio, '/arquivos', sufixo, '.csv', sep = ''))
if(!is.null(names(tags_pacotes)))
write.csv2(tags_pacotes, file = paste(diretorio, '/tags_pacotes', sufixo, '.csv',  sep = ''))
if(!is.null(names(grupos_pacotes)))
write.csv2(grupos_pacotes, file = paste(diretorio, '/grupos_pacotes', sufixo, '.csv', sep = ''))
}
minerar_sites <- function() {
minerar_site(site = 'http://dados.al.gov.br', diretorio = './mineracao/Alagoas')
minerar_site(site = 'http://dados.fortaleza.ce.gov.br', diretorio = './mineracao/Fortaleza-CE')
minerar_site(site = 'http://dados.df.gov.br', diretorio = './mineracao/Distrito Federal')
minerar_site(site = 'http://www.transparencia.dadosabertos.mg.gov.br', diretorio = 'mineracao/Minas Gerais')
minerar_site(site = 'https://dados.pbh.gov.br', diretorio = './mineracao/Belo Horizonte - MG')
minerar_site(site = 'http://dados.rs.gov.br', diretorio = './mineracao/Rio Grande do Sul', inicio = 1)
minerar_site(site = 'http://dados.rs.gov.br', diretorio = './mineracao/Rio Grande do Sul', inicio = 1001)
minerar_site(site = 'http://datapoa.com.br/', diretorio = './mineracao/Porto Alegre - RS')
minerar_site(site = 'http://dados.sc.gov.br', diretorio = './mineracao/Santa Catarina')
minerar_site(site = 'http://catalogo.governoaberto.sp.gov.br/', diretorio = './mineracao/Sao Paulo')
minerar_site(site = 'http://dados.prefeitura.sp.gov.br', diretorio = './mineracao/Sao Paulo - SP')
minerar_site(site = 'http://web.transparencia.pe.gov.br/ckan', diretorio = './mineracao/Pernambuco')
minerar_site(site = 'http://dados.natal.br', diretorio = './mineracao/Natal - RN')
}
minerar_site(site = 'http://dados.al.gov.br', diretorio = './mineracao/Alagoas')
minerar_site(site = 'http://dados.natal.br', diretorio = './mineracao/Natal - RN')
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_proporcao_tabular(arquivos)
})
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
grafico_populacao_x_datasets(datasets)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites)
grupos <- buscar_todos_grupos(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
print(length(naoClassificados$id))
print(length(datasets$id))
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites)
grupos <- buscar_todos_grupos(sites)
naoClassificados <- datasets %>% filter(
!(id %in% tags$package_id)
) %>% filter(
!(id %in% grupos$package_id)
)
print((1 - length(naoClassificados$id) / length(datasets$id)) * 100)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.5)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites) %>% filter(format(as.Date(metadata_created), '%Y') == 2020)
tags <- buscar_todas_tags(sites) %>% filter(package_id %in% datasets$id)
grupos <- buscar_todos_grupos(sites) %>% filter(package_id %in% datasets$id)
gerar_nuvem_palavras(datasets, tags, grupos, 0.8)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
grafico_idade_criacao(datasets)
tabela <- tabela_ano_criacao(datasets)
tabela
tabela %>% group_by(site) %>% summarise(minimo = min(ano), maximo = max(ano)) %>% arrange(minimo, maximo)
})
library("dplyr")
source('src/tratar_dados.R')
source('src/grafico_populacao.R')
source('src/grafico_populacao_x_datasets.R')
source('src/grafico_formatos.R')
source('src/grafico_ano.R')
source('src/grafico_tamanho.R')
source('src/grafico_idade.R')
source('src/grafico_5_estrelas.R')
source('src/nuvem_palavras.R')
estados <- c(
"Alagoas", "Distrito Federal", "Minas Gerais", "Rio Grande do Sul", "Santa Catarina", "Sao Paulo", "Pernambuco"
)
municipios <- c(
"Fortaleza-CE", "Belo Horizonte - MG", "Porto Alegre - RS", "Sao Paulo - SP", "Natal - RN"
)
sites <- c(estados, municipios)
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
grafico_populacao_x_datasets(datasets)
})
suppressWarnings({
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
grafico_formatos(arquivos)
})
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
library("ggplot2")
library("dplyr")
################## Primeira estrela
primeira_estrela <- function(arquivos, datasets) {
result <- arquivos %>% inner_join(datasets, by = c("package_id" = "id"))
result <- result %>% filter(license_id %in% licencasAbertas)
return(arquivos %>% filter(id %in% result$id))
}
calcular_estrelas <- function(datasets, arquivos) {
unique(datasets[datasets$license_id == 'other-closed',])
licencasAbertas <- c(
"cc-by-sa", "odc-odbl", "other-pd",
"gfdl", "cc-nc", "cc-by",
"other-open", "CC0-1.0", "CC-BY-4.0",
"CC-BY-NC-4.0", "odc-pddl", "cc-zero"
)
zeroEstrela 	<- c("API", "APP", "EXE", "JS", "Perl", "OWL", "HTML", "XSLT", "RDFa", "URL", "XLM", "LOG", "CTR")
umaEstrela 		<- c(
"PPTX", "DOC", "ArcGIS Online Map", "ZIP", "GZ", "ODT", "RAR", "TXT", "DCR", "DOCX", "WORD","BIN", "PPT", "ODP",
"PDF", "ODC", "MXD", "TAR", "OPENDOCUMENT", "RTF",
"ZIP CSV", "ZIP/CSV", "ZIP/DBF", "CSV/ZIP", "BPMN", "CVS", "APPLICATION/MSWORD", "PDF E HTML", "XLS / ODS", "XLSX / ODS", "CSV E PDF"
)
duasEstrela 	<- c("XLS", "MDB", "ArcGIS Map Service", "BMP", "TIFF", "XLSX", "GIF", "E00", "MrSID", "ArcGIS Map Preview", "MOP", "Esri REST", "DBASE", "SHP")
tresEstrela 	<- c("KML", "WCS", "NetCDF", "TSV", "WFS", "KMZ", "QGIS", "ODS", "JSON", "ODB", "ODF", "ODG", "XML", "WMS", "WMTS", "SVG", "JPEG", "JPG","CSV", "Atom Feed", "XYZ", "PNG", "RSS", "GEOJSON", "TOPOJSON", "IATI", "ICS")
cincoEstrela 	<- c("N3", "SPARQL", "RDF", "TTL", "KML")
result <- arquivos %>%
mutate(estrela = "") %>%
mutate(format = sub("\\.", "", toupper(format))) %>%
transform(estrela = ifelse(format %in% umaEstrela, '✰', estrela)) %>%
transform(estrela = ifelse(format %in% duasEstrela, '✰✰', estrela)) %>%
transform(estrela = ifelse(format %in% tresEstrela, '✰✰✰', estrela)) %>%
transform(estrela = ifelse(format %in% cincoEstrela, '✰✰✰✰', estrela))
return(result)
}
datasets <- buscar_todos_datasets(sites)
arquivos <- buscar_todos_arquivos(sites) %>% filter(package_id %in% datasets$id)
estrelas <- calcular_estrelas(datasets, arquivos)
estrelas <- estrelas %>% group_by(estrela) %>% summarise(total = n())
print(estrelas)
ggplot(estrelas, aes(x=estrela, y=total)) %+% geom_bar(stat = "identity") %+%
theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size=15)) %+%
ylab("Arquivos") %+% xlab("")
