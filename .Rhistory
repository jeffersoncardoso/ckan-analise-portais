dados = dados$results
is.na(dados$mimetype)
-is.na(dados$mimetype)
is.na(dados$mimetype)
is.character(dados$mimetype)
dados$mimetype
which(!is.na(dados$mimetype))
which(is.na(dados$mimetype))
which(is.na(dados$mimetype))
is.na(dados$format)
dados$format
dados$format
is.na(dados$format)
which(is.na(dados$format))
which(!is.na(dados$format))
dados[,which(!is.na(dados$format))]
dados[which(!is.na(dados$format)), ]
comTipo <- dados[which(!is.na(dados$format)), ]
View(comTipo)
which(!is.na(dados$mimetype))
comTipo <- dados[which(!is.na(dados$mimetype)), ]
View(comTipo)
dados$resource_group
dados$resource_group_id
!is.na(dados$resource_group_id)
which(!is.na(dados$resource_group_id))
which(!is.na(dados$resource_group_id))
dados$results
which(!is.na(dados$resource_group_id))
dados[which(!is.na(dados$resource_group_id)), ]
dados[which(!is.na(dados$resource_group_id)), ]$name
length(dados[which(!is.na(dados$resource_group_id)), ]$name)
dados[which(!is.na(dados$resource_group_id)), ]
View(dados)
dados <- resource_search(q = 'format:csv', url = 'http://dados.gov.br', limit = 50000, as = 'table')
dados = dados$results
dados <- resource_search(q = '*:*', url = 'http://dados.gov.br', limit = 50000, as = 'table')
dados <- resource_search(q = 'name:', url = 'http://dados.gov.br', limit = 50000, as = 'table')
dados = dados$results
View(dados)
dados$format
unique(dados$format)
trimws(dados$format)
unique(trimws(dados$format))
dados$created
unique(dados$created)
dados <- resource_search(q = 'name:', url = 'http://dados.rs.gov.br', limit = 50000, as = 'table')
dados = dados$results
dados$format
unique(dados$format)
resource_search(q = 'format:json', url = 'http://dados.rs.gov.br', limit = 50000, as = 'table')
dados <- resource_search(q = 'name:', url = 'http://dados.rs.gov.br', limit = 50000, as = 'table')
dados = dados$results
unique(dados$format)
names(dados)
dados$site = 'http://dados.rs.gov.br'
View(dados)
listarDatasets <- function(site) {
listarDatasets <- function(site) {
dados <- resource_search(q = 'name:', url = site, limit = 50000, as = 'table')
dados = dados$results
dados$site = site
}
listarDatasets <- function(site) {
dados <- resource_search(q = 'name:', url = site, limit = 50000, as = 'table')
dados = dados$results
dados$site = site
}
listarDatasets <- function(site) {
dados <- resource_search(q = 'name:', url = site, limit = 50000, as = 'table')
dados = dados$results
dados$site = site
return(dados)
}
listarDatasets('http://dados.rs.gov.br')
listarDatasets <- function(site) {
print(site)
dados <- resource_search(q = 'name:', url = site, limit = 50000, as = 'table')
dados = dados$results
dados$site = site
return(dados)
}
dados <- listarDatasets('http://dados.rs.gov.br')
listarGrupos <- function(site) {
grupos <- list(c(), c(), c())
names(grupos) <- c("Site", "Grupo", "Datasets")
groups <- group_list(url = site, limit = 1000, as = 'table', all_fields = TRUE)
names(groups)[names(groups) == "packages"] <- 'package_count'
grupos$Grupo = groups$title
grupos$Datasets = groups$package_count
grupos$Site[1:length(grupos$Grupo)] <- site
grupos <- as.data.frame(grupos)
return(grupos)
}
grupos <- listarGrupos("http://dados.gov.br")
listarDatasets <- function(site) {
print(site)
dados <- resource_search(q = 'name:', url = site, limit = 50000, as = 'table')
dados = dados$results
dados$site = site
return(dados)
}
dados <- listarDatasets('http://dados.rs.gov.br')
library('ckanr')
library('httr')
library("wordcloud")
library("rjson")
library("ggplot2")
dados <- listarDatasets('http://dados.rs.gov.br')
datasets <- listarDatasets("http://dados.gov.br")
for (site in sites) {
print(site)
datasets <- rbind(datasets, listarDatasets(site))
}
sites <- c(
"http://dados.al.gov.br",
"http://dados.fortaleza.ce.gov.br",
"http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
"https://dados.pbh.gov.br",
"http://dados.recife.pe.gov.br",
"http://web.transparencia.pe.gov.br/ckan",
"http://dados.natal.br",
"http://dados.rs.gov.br",
"http://dados.tce.rs.gov.br",
"http://catalogo.governoaberto.sp.gov.br/",
"http://datapoa.com.br",
"http://dados.prefeitura.sp.gov.br/"
)
for (site in sites) {
print(site)
grupos <- rbind(grupos, listarGrupos(site))
}
for (site in sites) {
print(site)
datasets <- rbind(datasets, listarDatasets(site))
}
datasets <- listarDatasets("http://dados.gov.br")
listarDatasets <- function(site) {
print(site)
dados <- resource_search(q = 'name:', url = site, limit = 50000, as = 'table')
dados = dados$results
dados$site = site
return(dados)
}
sites <- c(
"http://dados.al.gov.br",
"http://dados.fortaleza.ce.gov.br",
"http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
"https://dados.pbh.gov.br",
"http://dados.recife.pe.gov.br",
"http://web.transparencia.pe.gov.br/ckan",
"http://dados.natal.br",
"http://dados.rs.gov.br",
"http://dados.tce.rs.gov.br",
"http://catalogo.governoaberto.sp.gov.br/",
"http://datapoa.com.br",
"http://dados.prefeitura.sp.gov.br/"
)
datasets <- listarDatasets("http://dados.gov.br")
sites[1]
datasets <- listarDatasets(sites[1])
for (site in sites) {
print(site)
datasets <- rbind(datasets, listarDatasets(site))
}
View(datasets)
datasets <- list()
datasets <- c()
datasets <- c()
for (site in sites) {
datasets <- cbind(datasets, listarDatasets(site))
}
listarDatasets <- function(site) {
print(site)
dados <- resource_search(q = 'name:', url = site, limit = 50000, as = 'table')
dados = dados$results
dados$site = site
return(dados)
}
alagoas <- listarDatasets("http://dados.al.gov.br")
fortaleza <- listarDatasets("http://dados.fortaleza.ce.gov.br")
brasilia <- listarDatasets("http://dados.df.gov.br")
poa <- listarDatasets("http://datapoa.com.br")
sp <- listarDatasets("http://dados.prefeitura.sp.gov.br")
rs <- listarDatasets("http://dados.rs.gov.br")
View(rs)
rs$name
unique(rs$name)
rs$cache_url
unique(rs$cache_url)
unique(rs$url)
View(sp)
sp$id
unique(sp$id)
sp
unique(sp$id)
sites[1]
sites <- c(
"http://dados.al.gov.br",
"http://dados.fortaleza.ce.gov.br",
"http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
"https://dados.pbh.gov.br",
"http://dados.recife.pe.gov.br",
"http://web.transparencia.pe.gov.br/ckan",
"http://dados.natal.br",
"http://dados.rs.gov.br",
"http://dados.tce.rs.gov.br",
"http://catalogo.governoaberto.sp.gov.br/",
"http://datapoa.com.br",
"http://dados.prefeitura.sp.gov.br/"
)
sites[1]
install.packages('stringr')
library("stringr")
sites[1]
str_replace(":", "", sites[1])
str_replace("\\:", "", sites[1])
str_replace("s", "", sites[1])
str_replace(string = sites[1], pattern = ":", replacement = "")
str_replace(string = sites[1], pattern = c(":"), replacement = "")
str_replace(string = sites[1], pattern = c(":", "\\"), replacement = "")
str_replace(string = sites[1], pattern = c(":", "\\\\"), replacement = "")
str_replace(string = sites[1], pattern = c(":", "/"), replacement = "")
str_replace(string = sites[1], pattern = c(":", "//"), replacement = "")
sites <- list(
'alagoas' = "http://dados.al.gov.br",
'fortaleza' = "http://dados.fortaleza.ce.gov.br",
'brasilia' = "http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
'belo-horizonte' = "https://dados.pbh.gov.br",
'recife' = "http://dados.recife.pe.gov.br",
'pernambuco' = "http://web.transparencia.pe.gov.br/ckan",
'natal' = "http://dados.natal.br",
'rs' = "http://dados.rs.gov.br",
'rs-tece' = "http://dados.tce.rs.gov.br",
'sao-paulo' = "http://catalogo.governoaberto.sp.gov.br/",
'poa' = "http://datapoa.com.br",
'sp' = "http://dados.prefeitura.sp.gov.br/"
)
View(sites)
for (site in sites) {
print(site)
#datasets <- cbind(datasets, listarDatasets(site))
}
for (site in names(sites)) {
print(site)
#datasets <- listarDatasets(site)
}
sites[site]
for (site in names(sites)) {
print(sites[site])
#datasets <- listarDatasets(site)
}
paste(site, '.csv')
paste(site, '.csv', sep = "")
listarDatasets <- function(site) {
print(site)
dados <- resource_search(q = 'name:', url = site, limit = 50000, as = 'table')
dados = dados$results
dados$site = site
return(dados)
}
sites <- list(
'alagoas' = "http://dados.al.gov.br",
'fortaleza' = "http://dados.fortaleza.ce.gov.br",
'brasilia' = "http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
'belo-horizonte' = "https://dados.pbh.gov.br",
'recife' = "http://dados.recife.pe.gov.br",
'pernambuco' = "http://web.transparencia.pe.gov.br/ckan",
'natal' = "http://dados.natal.br",
'rs' = "http://dados.rs.gov.br",
'rs-tece' = "http://dados.tce.rs.gov.br",
'sao-paulo' = "http://catalogo.governoaberto.sp.gov.br/",
'poa' = "http://datapoa.com.br",
'sp' = "http://dados.prefeitura.sp.gov.br/"
)
for (site in names(sites)) {
datasets <- listarDatasets(sites[site])
write.csv(datasets, file = paste(site, '.csv', sep = ""), sep = ";")
}
View(datasets)
site
listarDatasets <- function(p_site) {
print(p_site)
dados <- resource_search(q = 'name:', url = p_site, limit = 50000, as = 'table')
dados = dados$results
dados$site = p_site
return(dados)
}
listarDatasets <- function(p_site) {
print(p_site)
dados <- resource_search(q = 'name:', url = p_site, limit = 50000, as = 'table')
dados = dados$results
dados$site = p_site
return(dados)
}
for (site in names(sites)) {
datasets <- listarDatasets(sites[site])
write.csv(datasets, file = paste(site, '.csv', sep = ""), sep = ";")
}
View(datasets)
listarDatasets <- function(p_site) {
print(p_site)
dados <- resource_search(q = 'name:', url = p_site, limit = 50000, as = 'table')
dados = dados$results
#dados$site = p_site
return(dados)
}
for (site in names(sites)) {
datasets <- listarDatasets(sites[site])
write.csv(datasets, file = paste(site, '.csv', sep = ""), sep = ";")
}
listarDatasets <- function(p_site) {
print(p_site)
dados <- resource_search(q = 'name:', url = p_site, limit = 20, as = 'table')
dados = dados$results
#dados$site = p_site
return(dados)
}
warnings()
for (site in names(sites)) {
datasets <- listarDatasets(sites[site])
write.csv2(datasets, file = paste('datasets/', site, '.csv', sep = ""), sep = ";")
}
listarDatasets <- function(p_site, limit = 99999) {
print(p_site)
dados <- resource_search(q = 'name:', url = p_site, limit = limit, as = 'table')
dados = dados$results
#dados$site = p_site
return(dados)
}
sites <- list(
'br' = "http://dados.gov.br",
'alagoas' = "http://dados.al.gov.br",
'fortaleza' = "http://dados.fortaleza.ce.gov.br",
'brasilia' = "http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
'belo-horizonte' = "https://dados.pbh.gov.br",
'recife' = "http://dados.recife.pe.gov.br",
'pernambuco' = "http://web.transparencia.pe.gov.br/ckan",
'natal' = "http://dados.natal.br",
'rs' = "http://dados.rs.gov.br",
'rs-tece' = "http://dados.tce.rs.gov.br",
'sao-paulo' = "http://catalogo.governoaberto.sp.gov.br/",
'poa' = "http://datapoa.com.br",
'sp' = "http://dados.prefeitura.sp.gov.br/"
)
for (site in names(sites)) {
datasets <- listarDatasets(sites[site])
write.csv2(datasets, file = paste('datasets/', site, '.csv', sep = ""), sep = ";")
}
sites <- list(
#'br' = "http://dados.gov.br",
'alagoas' = "http://dados.al.gov.br",
'fortaleza' = "http://dados.fortaleza.ce.gov.br",
'brasilia' = "http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
'belo-horizonte' = "https://dados.pbh.gov.br",
'recife' = "http://dados.recife.pe.gov.br",
'pernambuco' = "http://web.transparencia.pe.gov.br/ckan",
'natal' = "http://dados.natal.br",
'rs' = "http://dados.rs.gov.br",
'rs-tece' = "http://dados.tce.rs.gov.br",
'sao-paulo' = "http://catalogo.governoaberto.sp.gov.br/",
'poa' = "http://datapoa.com.br",
'sp' = "http://dados.prefeitura.sp.gov.br/"
)
for (site in names(sites)) {
datasets <- listarDatasets(sites[site])
write.csv2(datasets, file = paste('datasets/', site, '.csv', sep = ""), sep = ";")
}
listarDatasets(sites[1], 100)
sites <- list(
'br' = "http://dados.gov.br",
'alagoas' = "http://dados.al.gov.br",
'fortaleza' = "http://dados.fortaleza.ce.gov.br",
'brasilia' = "http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
'belo-horizonte' = "https://dados.pbh.gov.br",
'recife' = "http://dados.recife.pe.gov.br",
'pernambuco' = "http://web.transparencia.pe.gov.br/ckan",
'natal' = "http://dados.natal.br",
'rs' = "http://dados.rs.gov.br",
'rs-tece' = "http://dados.tce.rs.gov.br",
'sao-paulo' = "http://catalogo.governoaberto.sp.gov.br/",
'poa' = "http://datapoa.com.br",
'sp' = "http://dados.prefeitura.sp.gov.br/"
)
listarDatasets(sites[1], 100)
listarDatasets(sites[1], 1000)
listarDatasets(sites[1], 500)
sites[1]
sites <- list(
'br' = "http://dados.gov.br",
'alagoas' = "http://dados.al.gov.br",
'fortaleza' = "http://dados.fortaleza.ce.gov.br",
'brasilia' = "http://dados.df.gov.br",
#"http://www.transparencia.dadosabertos.mg.gov.br"
'belo-horizonte' = "https://dados.pbh.gov.br",
'recife' = "http://dados.recife.pe.gov.br",
'pernambuco' = "http://web.transparencia.pe.gov.br/ckan",
'natal' = "http://dados.natal.br",
'rs' = "http://dados.rs.gov.br",
'rs-tece' = "http://dados.tce.rs.gov.br",
'sao-paulo' = "http://catalogo.governoaberto.sp.gov.br/",
'poa' = "http://datapoa.com.br",
'sp' = "http://dados.prefeitura.sp.gov.br/"
)
sites[1]
listarDatasets(sites[1])
listarDatasets <- function(p_site, limit = 99999) {
print(p_site)
dados <- resource_search(q = 'name:', url = p_site, limit = limit, as = 'table')
dados = dados$results
#dados$site = p_site
return(dados)
}
listarDatasets(sites[1])
library('ckanr')
library('httr')
library("wordcloud")
library("rjson")
library("ggplot2")
library("stringr")
listarDatasets(sites[1])
for (site in names(sites)) {
datasets <- listarDatasets(sites[site])
write.csv2(datasets, file = paste('datasets/', site, '.csv', sep = ""), sep = ";")
}
listarDatasets("http://www.transparencia.dadosabertos.mg.gov.br")
install.packages("rpart.plot")
qualidade_servico <- read.table("../datasets/qualidade-servico.txt", header=TRUE)
# Leitura do dataset com registros de treinamento sobre a qualidade de serviço do restaurante
qualidade_servico <- read.table("qualidade-servico.txt", header=TRUE)
read.table("./qualidade-servico.txt", header=TRUE)
getwd()
# Leitura do dataset com registros de treinamento sobre a qualidade de serviço do restaurante
qualidade_servico <- read.table("./qualidade-servico.txt", header=TRUE)
#       cada classe (prob).
#
##############################################################################
#               EXEMPLO COM O DATASET QUALIDADE DE SERVIÇO                   #
##############################################################################
#
##########
# INDUZINDO O MODELO
##########
# Instala pacote adequado
install.packages("rpart")
# Carrega o pacote rpart na memória
library(rpart)
# Leitura do dataset com registros de treinamento sobre a qualidade de serviço do restaurante
qualidade_servico <- read.table("./qualidade-servico.txt", header=TRUE)
# Gerando o modelo da árvores:
### R˜EP+QR+LE: atributo alvo e descritivos
### data: conjunto de treinamento
### method: predição categórica, class
### control: quantidade mínima de exemplares em um nó para que ele tenha subárvores
### params: critério para seleção de atributos: Ganho de informação foi usado
modelo_qualidade_servico <- rpart(R~EP+QR+LE,
data=qualidade_servico,
method="class",
control=rpart.control(minsplit = 1),
parms=list(split="Information"))
##########
# INTERPRETANDO O MODELO
##########
modelo_qualidade_servico
##########
#
# Embora existam diversas alternativas no ambiente R, será utilizada a função
# rpart.plot() (Milborrow, 2014)
#
### arvore_decisao <- rpart.plot(modelo_arvore_decisao, digitos, tipo)
### modelo_arvore_decisao: modelo gerado pela função rpart()
### digitos: quantidade de casas decimais plotadas
### tipo: especifica a forma de apresentação do resultado: valores de 0 a 4
# Instala pacote adequado
install.packages("rpart.plot")
# Carrega o pacote rpart na memória
library(rpart.plot)
# Faz a plotagem da árvore de decisão
arvore_decisao <- rpart.plot(modelo_qualidade_servico, type = 3)
##########
# MATRIZ DE CONFUSÃO
##########
table(classe_estimada)
##########
# DEDUZINDO O MODELO
##########
# Leitura do dataset com registros de teste sobre a qualidade de serviço do restaurante
qualidade_servico_teste <- read.table("../datasets/qualidade-servico-teste.txt", header=TRUE)
##########
# DEDUZINDO O MODELO
##########
# Leitura do dataset com registros de teste sobre a qualidade de serviço do restaurante
qualidade_servico_teste <- read.table("../datasets/qualidade-servico.txt", header=TRUE)
##########
# DEDUZINDO O MODELO
##########
# Leitura do dataset com registros de teste sobre a qualidade de serviço do restaurante
qualidade_servico_teste <- read.table("qualidade-servico.txt", header=TRUE)
classe_estimada <- predict(modelo_qualidade_servico, qualidade_servico_teste, "class")
##########
# MATRIZ DE CONFUSÃO
##########
table(classe_estimada)
table(classe_estimada, qualidade_servico_teste$R)
